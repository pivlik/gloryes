{"version":3,"sources":["app/search-result.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","define","$","tableTpl","SearchResult","$content","this","$forms","find","$submit","$results","$moreApartments","$shownApartmentsText","$table","$ajaxLoader","$ajaxLoaderInBtn","clone","addClass","$sorts","$searchForm","$sortInput","$orderInput","$resultBtn","$selectSort","bindEvents","value","on","openResult","bind","showResults","bindClickMoreApartments","sort","e","preventDefault","that","$data","serialize","objectId","ajax","url","attr","type","dataType","data","beforeSend","show","success","each","indx","element","val","parseInt","$el","building","$target","page","BtnText","$shownApText","hasClass","empty","text","updateApartments","hide","window","history","pushState","$this","$currentForm","closest","next","slideToggle","removeClass","nextPage","textBtn","prop","append","downloadApartment","html","parents","direction","dataset","undefined"],"mappings":"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","file":"../../app/search-result.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\ndefine('app/search-result', ['jquery', 'app/tpl/search/table-apartment'], function ($, tableTpl) {\n    'use strict';\n\n    var SearchResult = function () {\n        function SearchResult($content) {\n            _classCallCheck(this, SearchResult);\n\n            // Формы всех ЖК\n            this.$forms = $content.find('form');\n            // Показать квартиры комплекса (первые 10)\n            this.$submit = $content.find('.j-btn-more');\n            // Блок с результатами\n            this.$results = $content.find('.b-building__results');\n            // Загрузить ещё квартир комплекса\n            this.$moreApartments = $content.find('.j-building-more');\n            // Текст сколько квартир показано\n            this.$shownApartmentsText = $content.find('.b-building__shown-text');\n            // Таблица с результатами\n            this.$table = $content.find('.b-building__table');\n            // Ajax loader\n            this.$ajaxLoader = $('.b-ajax-loader');\n            // Ajax loader для добавки внутрь кнопки\n            this.$ajaxLoaderInBtn = this.$ajaxLoader.clone().addClass('b-ajax-loader_theme_inside is-active');\n\n            // Кнопки сортировки\n            this.$sorts = $content.find('.j-sort');\n            // Форма поиска\n            this.$searchForm = $('.j-search-filter').find('form');\n            // Поле сортировки\n            this.$sortInput = this.$searchForm.find('input[name=sort]');\n            // Направление сортировки\n            this.$orderInput = this.$searchForm.find('input[name=order]');\n            // Кнопка \"Показать результаты\"\n            this.$resultBtn = this.$searchForm.find('.b-search-filter__submit-btn');\n            // Селект сортировки\n            this.$selectSort = $content.find('.j-select-sort');\n\n            this.bindEvents();\n        }\n\n        _createClass(SearchResult, [{\n            key: 'bindEvents',\n            value: function bindEvents() {\n                this.$submit.on('click', this.openResult.bind(this));\n                this.$resultBtn.on('click', this.showResults.bind(this));\n                this.$moreApartments.on('click', this.bindClickMoreApartments.bind(this));\n                this.$sorts.on('click', this.sort.bind(this));\n\n                this.$selectSort.on('change', this.sort.bind(this));\n            }\n        }, {\n            key: 'showResults',\n            value: function showResults(e) {\n                e.preventDefault();\n                var that = this;\n                var $data = this.$searchForm.serialize();\n                var objectId = void 0;\n\n                $.ajax({\n                    url: this.$searchForm.attr('action'),\n                    type: this.$searchForm.attr('method') || 'post',\n                    dataType: 'json',\n                    data: $data,\n                    beforeSend: function beforeSend() {\n                        that.$ajaxLoader.show();\n                    },\n                    success: function success(data) {\n                        that.$forms.each(function (indx, element) {\n                            objectId = $(element).find('input[name=object]').val();\n                            objectId = parseInt(objectId);\n\n                            var $el = $(element);\n                            var $results = data.building[objectId];\n                            var $target = $el.find('.b-building__table');\n                            var page = $el.find('input[name=page]');\n                            var BtnText = $results['results_show_text'];\n                            var $shownApText = $el.find('.b-building__shown-text');\n                            var $moreApartments = $el.find('.j-building-more');\n                            var $submit = $el.find('.j-btn-more');\n                            // Устанавливаем текст для кнопки\n                            // $submit.data('text', $results['toggle_btn_text']);\n\n                            if ($submit.hasClass('is-active')) {\n                                $submit.empty().text('Скрыть');\n                            } else {\n                                $submit.empty().text($results['toggle_btn_text']);\n                            }\n                            // Обновляем таблицу с результатами\n                            that.updateApartments($target, $results);\n                            if ($results['next_page'] === 0) {\n                                $moreApartments.hide();\n                            } else {\n                                page.val($results['page']);\n                                page.attr('data-next', $results['next_page']);\n                            }\n                            $shownApText.text(BtnText);\n                        });\n\n                        that.$ajaxLoader.hide();\n                        // Добаляем GET в url\n                        window.history.pushState(null, null, '?' + $data);\n                    }\n                });\n                // Добаляем GET в url\n                window.history.pushState(null, null, '?' + $data);\n            }\n        }, {\n            key: 'openResult',\n            value: function openResult(e) {\n                var $this = $(e.target);\n                var $currentForm = $this.closest('form');\n                var $data = this.$searchForm.serialize() + '&' + $currentForm.serialize();\n                e.preventDefault();\n                $this.next().slideToggle();\n\n                if ($this.hasClass('is-active')) {\n                    $this.removeClass('is-active').empty().text($this.data('text'));\n                } else {\n                    $this.addClass('is-active').empty().text('Скрыть');\n                }\n\n                // Добаляем GET в url\n                window.history.pushState(null, null, '?' + $data);\n            }\n        }, {\n            key: 'bindClickMoreApartments',\n            value: function bindClickMoreApartments(e) {\n                e.preventDefault();\n                var that = this;\n                var $target = $(e.target);\n                var $currentForm = $target.closest('form');\n                var objectId = parseInt($currentForm.find('input[name=object]').val());\n                var page = $currentForm.find('input[name=page]');\n                var nextPage = page.attr('data-next');\n                var $shownApartmentsText = $currentForm.find('.b-building__shown-text');\n                // Текст на кнопке - \"показать ещё\"\n                var textBtn = $target.text();\n\n                // Устанавливаем значение следующей страницы\n                if (nextPage) {\n                    page.val(nextPage);\n                }\n\n                var $data = this.$searchForm.serialize() + '&' + $currentForm.serialize();\n\n                $.ajax({\n                    url: this.$searchForm.attr('action'),\n                    type: this.$searchForm.attr('method') || 'post',\n                    dataType: 'json',\n                    data: $data,\n                    beforeSend: function beforeSend() {\n                        that.$moreApartments.empty().prop('disabled', true).append(that.$ajaxLoaderInBtn).addClass('is-disabled');\n                    },\n                    success: function success(data) {\n                        that.$moreApartments.empty().prop('disabled', false).removeClass('is-disabled').text(textBtn);\n\n                        var $results = data.building[objectId];\n                        that.downloadApartment($target, $results);\n                        if ($results['next_page'] === 0) {\n                            that.$moreApartments.hide();\n                        } else {\n                            page.val($results['page']);\n                            page.attr('data-next', $results['next_page']);\n                        }\n                        $shownApartmentsText.text($results['results_show_text']);\n\n                        // Добаляем GET в url\n                        window.history.pushState(null, null, '?' + $data);\n                    }\n                });\n            }\n        }, {\n            key: 'downloadApartment',\n            value: function downloadApartment($target, data) {\n                var html = tableTpl(data);\n                var parents = $target.parents('.b-building__results');\n                parents.find('tbody').append(html);\n            }\n        }, {\n            key: 'updateApartments',\n            value: function updateApartments($target, data) {\n                var html = tableTpl(data);\n                var parents = $target.parents('.b-building__results');\n                parents.find('tbody').empty().append(html);\n            }\n        }, {\n            key: 'sort',\n\n\n            /**\n             * Сортировка\n             * @param {Event} e - Event\n             */\n            value: function sort(e) {\n                e.preventDefault();\n                var that = this;\n                // По какой ссылки кликнули\n                var $target = $(e.target);\n                //По какому полю сортировать\n                var sort = $target.data('sort') || $target.find('option:selected').data('sort');\n                // Направление сортировки\n                var direction = $target.attr('data-direction') || $target.find('option:selected').data('direction');\n                var $currentForm = $target.closest('form');\n                var objectId = parseInt($currentForm.find('input[name=object]').val());\n\n                $target.parents('tr').find('.j-sort').each(function () {\n                    delete $(this)[0].dataset.direction;\n                    $(this).removeClass('b-building__sort_style_asc').removeClass('b-building__sort_style_desc');\n                });\n\n                if (direction === 'asc' || direction === undefined) {\n                    $target.attr('data-direction', 'desc').removeClass('b-building__sort_style_asc').addClass('b-building__sort_style_desc');\n                    //Присваиваем значение, если direction = undefined\n                    direction = 'asc';\n                } else {\n                    $target.attr('data-direction', 'asc').removeClass('b-building__sort_style_desc').addClass('b-building__sort_style_asc');\n                }\n                // Устанавливаем направление сортировки\n                this.$sortInput.val(sort);\n                this.$orderInput.val(direction);\n\n                var $data = this.$searchForm.serialize() + '&' + $target.closest('form').serialize();\n\n                $.ajax({\n                    url: this.$searchForm.attr('action'),\n                    type: this.$searchForm.attr('method') || 'post',\n                    dataType: 'json',\n                    data: $data + '&no_offset=1',\n                    beforeSend: function beforeSend() {\n                        that.$ajaxLoader.show();\n                    },\n                    success: function success(data) {\n                        var $results = data.building[objectId];\n                        that.updateApartments($target, $results);\n                        that.$ajaxLoader.hide();\n                        // Добаляем GET в url\n                        window.history.pushState(null, null, '?' + $data);\n                    }\n                });\n            }\n        }]);\n\n        return SearchResult;\n    }();\n\n    return SearchResult;\n});"]}