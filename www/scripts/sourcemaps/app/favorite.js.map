{"version":3,"sources":["app/favorite.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","define","$","Favorite","this","$el","active","$target","numberFavorite","find","bindClick","value","that","document","on","changeActiveClass","opacityRow","hasClass","send","id","data","action","ajax","url","type","dataType","success","animateAddInFavorite","ret","changeStateTargetBlock","clone","offset","top","left","css","opacity","position","z-index","appendTo","animate","width","height","detach","parseInt","removeClass","addClass","text","row","parents"],"mappings":"AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,KAIhiBkB,QAAO,gBAAiB,UAAW,SAAUC,GA8IzC,MAzIe,YACX,QAASC,KACLtB,gBAAgBuB,KAAMD,GAGtBC,KAAKC,IAAM,cAEXD,KAAKE,OAAS,YAEdF,KAAKG,QAAUL,EAAE,sBAEjBE,KAAKI,eAAiBJ,KAAKG,QAAQE,KAAK,oBAExCL,KAAKM,YAyHT,MAjHAzB,cAAakB,IACTN,IAAK,YACLc,MAAO,WACH,GAAIC,GAAOR,IAEXF,GAAEW,UAAUC,GAAG,QAASV,KAAKC,IAAK,WAC9BO,EAAKG,kBAAkBb,EAAEE,OACzBQ,EAAKI,WAAWd,EAAEE,YAI1BP,IAAK,oBAOLc,MAAO,SAA2BN,GAC9BA,EAAIA,EAAIY,SAASb,KAAKE,QAAU,cAAgB,YAAYF,KAAKE,QAEjEF,KAAKc,KAAKb,MAGdR,IAAK,OACLc,MAAO,SAAcN,GACjB,GAAIO,GAAOR,KAEPe,EAAKd,EAAIe,KAAK,WAEdC,EAAShB,EAAIY,SAASb,KAAKE,QAAU,MAAQ,MAE7Cc,GAASD,GAAIA,EAAIE,OAAQA,EAE7BnB,GAAEoB,MACEC,IAAK,qBACLC,KAAM,OACNC,SAAU,OACVL,KAAMA,EACNM,QAAS,SAAiBN,GACtBR,EAAKe,qBAAqBtB,EAAKe,EAAKQ,KACpChB,EAAKiB,uBAAuBT,EAAKQ,WAK7C/B,IAAK,uBAOLc,MAAO,SAA8BN,GAC5BD,KAAKG,QAAQjB,QAIde,EAAIY,SAASb,KAAKE,SAClBD,EAAIyB,QAAQC,QACRC,IAAK3B,EAAI0B,SAASC,IAClBC,KAAM5B,EAAI0B,SAASE,OACpBC,KACCC,QAAS,MACTC,SAAU,WACVC,UAAW,QACZC,SAASpC,EAAE,SAASqC,SACnBP,IAAK5B,KAAKG,QAAQwB,SAASC,IAAM,GACjCC,KAAM7B,KAAKG,QAAQwB,SAASE,KAAO,GACnCO,MAAO,GACPC,OAAQ,IACT,IAAM,WACLvC,EAAEE,MAAMsC,cAKpB7C,IAAK,yBAOLc,MAAO,SAAgCS,GACnCA,EAAOuB,SAASvB,EAAM,IAET,IAATA,EACAhB,KAAKG,QAAQqC,YAAYxC,KAAKE,SAE9BF,KAAKG,QAAQsC,SAASzC,KAAKE,QAC3BF,KAAKI,eAAesC,KAAK1B,OAIjCvB,IAAK,aAQLc,MAAO,SAAoBN,GACvB,GAAKA,EAAIY,SAAS,mBAAlB,CAIA,GAAI8B,GAAM1C,EAAI2C,QAAQ,KACtBD,GAAIA,EAAI9B,SAASb,KAAKE,QAAU,cAAgB,YAAYF,KAAKE,aAIlEH","file":"../../app/favorite.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\ndefine('app/favorite', ['jquery'], function ($) {\n    /**\n     * Избранное\n     * @constructor\n     */\n    var Favorite = function () {\n        function Favorite() {\n            _classCallCheck(this, Favorite);\n\n            // Все поля со звездами\n            this.$el = '.j-favorite';\n            // Класс для активного состояния\n            this.active = 'is-active';\n            // Элемент к которому надо сделать анимацию подлета звездочки\n            this.$target = $('.j-favorite-target');\n            // Количество выбранного\n            this.numberFavorite = this.$target.find('.b-favorite__num');\n\n            this.bindClick();\n        }\n\n        /**\n         * Биндим события\n         */\n\n\n        _createClass(Favorite, [{\n            key: 'bindClick',\n            value: function bindClick() {\n                var that = this;\n\n                $(document).on('click', this.$el, function () {\n                    that.changeActiveClass($(this));\n                    that.opacityRow($(this));\n                });\n            }\n        }, {\n            key: 'changeActiveClass',\n\n\n            /**\n             * Вешаем или убираем активный класс\n             * @param {Object} $el - звездочка по которой кликнули\n             */\n            value: function changeActiveClass($el) {\n                $el[$el.hasClass(this.active) ? 'removeClass' : 'addClass'](this.active);\n\n                this.send($el);\n            }\n        }, {\n            key: 'send',\n            value: function send($el) {\n                var that = this;\n                // id квартиры\n                var id = $el.data('flat-id');\n                // Определяем добавлям мы квартиру в избранное или удаляем\n                var action = $el.hasClass(this.active) ? 'add' : 'del';\n                // ES6 синтаксис\n                var data = { id: id, action: action };\n\n                $.ajax({\n                    url: '/ajax/favorite.php',\n                    type: 'post',\n                    dataType: 'json',\n                    data: data,\n                    success: function success(data) {\n                        that.animateAddInFavorite($el, data.ret);\n                        that.changeStateTargetBlock(data.ret);\n                    }\n                });\n            }\n        }, {\n            key: 'animateAddInFavorite',\n\n\n            /**\n             * Анимируем добавление в избранное\n             * @param {Object} $el - звездочка по которой кликнули\n             */\n            value: function animateAddInFavorite($el) {\n                if (!this.$target.length) {\n                    return;\n                }\n\n                if ($el.hasClass(this.active)) {\n                    $el.clone().offset({\n                        top: $el.offset().top,\n                        left: $el.offset().left\n                    }).css({\n                        opacity: '0.5',\n                        position: 'absolute',\n                        'z-index': '100'\n                    }).appendTo($('body')).animate({\n                        top: this.$target.offset().top + 10,\n                        left: this.$target.offset().left + 10,\n                        width: 75,\n                        height: 75\n                    }, 1000, function () {\n                        $(this).detach();\n                    });\n                }\n            }\n        }, {\n            key: 'changeStateTargetBlock',\n\n\n            /**\n             * Запись количества выбранного в блок\n             * @param {Number} data - данные от сервера, количество избранного\n             */\n            value: function changeStateTargetBlock(data) {\n                data = parseInt(data, 10);\n\n                if (data === 0) {\n                    this.$target.removeClass(this.active);\n                } else {\n                    this.$target.addClass(this.active);\n                    this.numberFavorite.text(data);\n                }\n            }\n        }, {\n            key: 'opacityRow',\n\n\n            /**\n             * Если находимся на странице избранного, то\n             * при клике затемняем ряд в таблице\n             * @param {Object} $el - элемент таблицы\n             */\n            value: function opacityRow($el) {\n                if (!$el.hasClass('j-favorite-page')) {\n                    return;\n                }\n\n                var row = $el.parents('tr');\n                row[row.hasClass(this.active) ? 'removeClass' : 'addClass'](this.active);\n            }\n        }]);\n\n        return Favorite;\n    }();\n\n    return Favorite;\n});"]}