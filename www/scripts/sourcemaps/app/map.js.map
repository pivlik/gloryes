{"version":3,"sources":["app/map.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","define","$","InfoBox","google","tpl","MarkerClusterer","Map","$map","this","isMobile","window","width","undefined","data","attributData","scriptData","map","id","extend","markers","radiuses","markerOpen","fit","minZoom","minzoom","maxZoom","maxzoom","center","maps","LatLng","options","lat","lng","zoom","zoomControlOptions","position","ControlPosition","RIGHT_CENTER","streetViewControl","mapTypeControl","styles","initCustomZoomControls","initMap","clickCustomZoomControls","initBounds","initMarkers","initRadiuses","imageBoundsInit","initInfoWindow","editor","initTabs","value","that","imageBounds","coords","title","text","image","icon","each","index","marker","initMarker","radius","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","sizes","Array","isArray","array","item","parseInt","match","url","scaledSize","Size","animation","Animation","DROP","type","optimized","Marker","push","setMap","bounds","bindMarkerClick","setOptions","clickable","event","addListener","markerLink","infoWindow","setContent","open","markerShow","markerHide","setVisible","isVisible","content","disableAutoPan","maxWidth","pixelOffset","zIndex","closeBoxMargin","closeBoxURL","infoBoxClearance","isHidden","pane","enableEventPropagation","boxStyle","closeInfoWindow","$infoBox","$width","$height","$arrow","find","$closeInfoWindow","$image","load","height","outerHeight","click","close","indexOf","location","origin","href","dataInfoWindow","north","west","south","east","historicalOverlay","GroundOverlay","imageBoundsZoomChange","toggleView","changeView","currentZoom","getZoom","LatLngBounds","fitBounds","$zoomWrapper","next","$zoomIn","$zoomOut","zoomControl","hide","addClass","removeClass","setZoom","clusterOptions","$tabsWrapper","parents","$tabItems","active","$tabBtnToggleContent","$tabContent","e","preventDefault","markerToggle","toggleClass","console","log","latLng","toFixed"],"mappings":"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","file":"../../app/map.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\ndefine(['jquery', 'infobox', 'app/google-map', 'app/tpl/map/tooltip', 'markerClusterer', 'app/functions'], function ($, InfoBox, google, tpl, MarkerClusterer) {\n    /***\n     * Данные карты\n     * @param {Object} $map - jQuery объект - карта\n     * @constructor\n     */\n    var Map = function () {\n        function Map($map) {\n            _classCallCheck(this, Map);\n\n            this.isMobile = $(window).width() < 768;\n\n            if ($map.data('noinit') !== undefined && this.isMobile) {\n                return;\n            }\n\n            var attributData = $map.data();\n            var scriptData = window.map[$map[0].id];\n            var data = $.extend(scriptData, attributData);\n            this.$map = $map;\n            this.data = data || {};\n            this.markers = [];\n            this.radiuses = [];\n            this.markerOpen = -1;\n            this.data.fit = data.fit;\n            this.data.minZoom = data.minzoom || 10;\n            this.data.maxZoom = data.maxzoom || 18;\n\n            if (data.center) {\n                this.data.center = new google.maps.LatLng(data.center[0], data.center[1]);\n            }\n\n            this.options = {\n                center: {\n                    lat: 59.939552,\n                    lng: 30.423428\n                },\n                zoom: 12,\n                zoomControlOptions: {\n                    position: google.maps.ControlPosition.RIGHT_CENTER\n                },\n                streetViewControl: false,\n                mapTypeControl: false,\n                styles: false\n            };\n\n            this.options = $.extend(this.options, this.data);\n\n            this.initCustomZoomControls($map);\n            this.initMap();\n            this.clickCustomZoomControls();\n            this.initBounds();\n            this.initMarkers();\n            this.initRadiuses();\n            this.imageBoundsInit();\n            this.initInfoWindow();\n            this.editor();\n            this.initTabs();\n            // this.initCluster();\n        }\n\n        /**\n         * Инициализация карты\n         */\n\n\n        _createClass(Map, [{\n            key: 'initMap',\n            value: function initMap() {\n                this.map = new google.maps.Map(this.$map[0], this.options);\n            }\n\n            /**\n             * Сбор данных маркеров\n             */\n\n        }, {\n            key: 'initMarkers',\n            value: function initMarkers() {\n                var that = this;\n\n                if (!this.data.markers) {\n                    return;\n                }\n\n                // Добавляем данные imageBounds в основной поток маркеров, если он есть\n                //@todo нужно добавлять не один маркер с картинкой, а все, что перечислены\n                if (this.data.imageBounds) {\n                    this.data.markers[this.data.markers.length] = {\n                        coords: this.data.imageBounds.coords,\n                        title: this.data.imageBounds.title,\n                        text: this.data.imageBounds.text,\n                        image: this.data.imageBounds.icon\n                    };\n                }\n\n                $.each(this.data.markers, function (index, marker) {\n                    that.initMarker(index, marker);\n                });\n            }\n\n            /**\n             * Инициализация радиусов\n             */\n\n        }, {\n            key: 'initRadiuses',\n            value: function initRadiuses() {\n                var that = this;\n\n                if (!this.data.radiuses) {\n                    return;\n                }\n\n                $.each(this.data.radiuses, function (index, radius) {\n                    new google.maps.Circle({\n                        strokeColor: radius.strokeColor,\n                        strokeOpacity: radius.strokeOpacity,\n                        strokeWeight: radius.strokeWeight,\n                        fillColor: radius.fillColor,\n                        fillOpacity: radius.fillOpacity,\n                        map: that.map,\n                        center: new google.maps.LatLng(radius.center[0], radius.center[1]),\n                        radius: radius.radius\n                    });\n                });\n            }\n\n            /**\n             * Инициализация маркера на карте\n             * @param {Number} index - номер маркера\n             * @param {Object} data - данные маркера\n             *\n             */\n\n        }, {\n            key: 'initMarker',\n            value: function initMarker(index, data) {\n                // если в массиве пришли строки, приводим их к integer\n                function toInteger(array) {\n                    return array.map(function (item) {\n                        return parseInt(item);\n                    });\n                }\n\n                var coords = new google.maps.LatLng(data.coords[0], data.coords[1]);\n                var image = typeof data.image !== 'string' ? '/img/map/markers/marker.png' : data.image;\n                // проверка на правильность данных из data.sizes = Array [Number, Number]\n                var sizes = Array.isArray(data.sizes) && data.sizes.length === 2 ? toInteger(data.sizes) : [26, 26];\n\n                var match = image.match(/^\\.|\\.svg$|\\.gif$|.jpg$|\\.png$/i);\n\n                if (match[0] === '.svg') {\n                    image = {\n                        url: image,\n                        scaledSize: new google.maps.Size(sizes[0], sizes[1])\n                    };\n                }\n\n                var options = {\n                    map: this.map,\n                    position: coords,\n                    animation: google.maps.Animation.DROP,\n                    icon: image,\n                    type: data.type,\n                    optimized: false\n                };\n\n                var marker = new google.maps.Marker(options);\n                this.markers.push(marker);\n                marker.setMap(this.map);\n\n                if (this.data.zoom === undefined || this.data.fit !== undefined) {\n                    this.bounds.extend(coords);\n                }\n\n                this.bindMarkerClick(index, marker, data);\n            }\n\n            /**\n             * Клик по маркеру\n             * @param {Number} index - номер маркера\n             * @param {Object} marker - google marker\n             * @param {Object} data - данные маркера\n             */\n\n        }, {\n            key: 'bindMarkerClick',\n            value: function bindMarkerClick(index, marker, data) {\n                var that = this;\n\n                if (!data.title && !data.text && !data.url) {\n                    marker.setOptions({\n                        clickable: false\n                    });\n                    return;\n                }\n\n                google.maps.event.addListener(marker, 'click', function () {\n                    if (data.url) {\n                        that.markerLink(data.url);\n                        return;\n                    }\n\n                    that.infoWindow.setContent(tpl(data));\n                    that.infoWindow.open(that.map, this);\n\n                    if (that.markerOpen !== -1) {\n                        that.markerShow(that.markerOpen);\n                    }\n                    that.markerOpen = index;\n                    that.markerHide(index);\n                });\n            }\n\n            /**\n             * Скрыть маркер\n             * @param {Number} index - порядковый номер маркера\n             */\n\n        }, {\n            key: 'markerHide',\n            value: function markerHide(index) {\n                this.markers[index].setVisible(false);\n            }\n\n            /**\n             * Показать маркер\n             * @param {Number} index - порядковый номер маркера\n             */\n\n        }, {\n            key: 'markerShow',\n            value: function markerShow(index) {\n                this.markers[index].setVisible(true);\n            }\n        }, {\n            key: 'markerToggle',\n            value: function markerToggle(type) {\n                $.each(this.markers, function (index, marker) {\n                    if (!marker.type) {\n                        return;\n                    }\n\n                    var isVisible = type === 0 || marker.type === type;\n                    marker.setVisible(isVisible);\n                });\n            }\n\n            /**\n             * Балун\n             */\n\n        }, {\n            key: 'initInfoWindow',\n            value: function initInfoWindow() {\n                var that = this;\n\n                // Стандартные настройки infoWindow\n                this.infoWindow = new InfoBox({\n                    content: '',\n                    disableAutoPan: false,\n                    maxWidth: 0,\n                    pixelOffset: new google.maps.Size(-55, -83),\n                    zIndex: null,\n                    closeBoxMargin: '0px 0px 0px 0px',\n                    closeBoxURL: '',\n                    infoBoxClearance: new google.maps.Size(10, 10),\n                    isHidden: false,\n                    pane: 'floatPane',\n                    enableEventPropagation: false,\n                    boxStyle: {\n                        width: 'auto'\n                    }\n                });\n\n                // Закрытие всех infoWindow при клике по карте\n                google.maps.event.addListener(this.map, 'click', function () {\n                    that.closeInfoWindow();\n                });\n\n                this.infoWindow.addListener('domready', function () {\n                    var $infoBox = $('.infoBox');\n                    var $width = void 0;\n                    var $height = void 0;\n                    var $arrow = $infoBox.find('.b-map-tooltip__arrow');\n                    var $closeInfoWindow = $('.b-map-tooltip__close');\n\n                    var $image = $infoBox.find('img');\n\n                    if ($image.length) {\n                        $image.load(function () {\n                            $width = $infoBox.width();\n                            $height = $infoBox.height() + $arrow.outerHeight();\n\n                            that.infoWindow.setOptions({\n                                pixelOffset: new google.maps.Size(-$width / 2, -$height)\n                            });\n                        });\n                    } else {\n                        $width = $infoBox.width();\n                        $height = $infoBox.height() + $arrow.outerHeight();\n                        that.infoWindow.setOptions({\n                            pixelOffset: new google.maps.Size(-$width / 2, -$height)\n                        });\n                    }\n\n                    $closeInfoWindow.click(function () {\n                        that.closeInfoWindow();\n                    });\n                });\n            }\n\n            /**\n             * Закрытие балуна\n             */\n\n        }, {\n            key: 'closeInfoWindow',\n            value: function closeInfoWindow() {\n                if (this.markerOpen !== -1) {\n                    this.markerShow(this.markerOpen);\n                }\n\n                this.markerOpen = -1;\n                this.infoWindow.close();\n            }\n\n            /**\n             * Маркер с ссылкой\n             * @param {String} url - ссыллка\n             */\n\n        }, {\n            key: 'markerLink',\n            value: function markerLink(url) {\n                var isLocalLink = url.indexOf(window.location.origin) + 1;\n\n                if (isLocalLink) {\n                    window.location.href = url;\n                } else {\n                    window.open(url);\n                }\n            }\n\n            /**\n             * Инициализация картинки на карте\n             */\n\n        }, {\n            key: 'imageBoundsInit',\n            value: function imageBoundsInit() {\n                var data = this.data.imageBounds;\n\n                if (!data) {\n                    return;\n                }\n\n                var that = this;\n                // Данные для infoWindow\n                var dataInfoWindow = {\n                    coords: this.data.imageBounds.coords,\n                    text: this.data.imageBounds.text,\n                    title: this.data.imageBounds.title\n                };\n\n                var index = that.markers.length - 1;\n\n                var imageBounds = this.data.imageBounds;\n\n                this.imageBounds = {\n                    north: imageBounds.north,\n                    west: imageBounds.west,\n                    south: imageBounds.south,\n                    east: imageBounds.east\n                };\n\n                this.historicalOverlay = new google.maps.GroundOverlay(imageBounds.image, this.imageBounds);\n\n                this.historicalOverlay.setMap(this.map);\n\n                google.maps.event.addListener(this.historicalOverlay, 'click', function () {\n                    that.infoWindow.setContent(tpl(dataInfoWindow));\n                    that.infoWindow.open(that.map, that.markers[index]);\n                    that.markerHide(index);\n                });\n\n                this.imageBoundsZoomChange();\n            }\n\n            /**\n             * При изменении зума картинка imageBounds меняется на маркер,\n             * т.к. при слишком большом зуме картинка уже не видна на карте.\n             */\n\n        }, {\n            key: 'imageBoundsZoomChange',\n            value: function imageBoundsZoomChange() {\n                var that = this;\n                var currentZoom = this.map.getZoom();\n                var changeView = 14;\n\n                function toggleView(zoom) {\n                    if (zoom <= changeView) {\n                        that.historicalOverlay.setMap(null);\n                        that.markerShow(that.markers.length - 1);\n                    } else {\n                        that.historicalOverlay.setMap(that.map);\n                        that.markerHide(that.markers.length - 1);\n                    }\n                }\n\n                toggleView(currentZoom);\n\n                this.map.addListener('zoom_changed', function () {\n                    currentZoom = that.map.getZoom();\n                    toggleView(currentZoom);\n                });\n            }\n\n            /**\n             * Определение крайних позиций маркеров на карте\n             */\n\n        }, {\n            key: 'initBounds',\n            value: function initBounds() {\n                if (this.data.zoom !== undefined && this.data.fit === undefined) {\n                    return;\n                }\n\n                this.bounds = new google.maps.LatLngBounds();\n\n                this.fitBounds(this.bounds);\n            }\n\n            /**\n             * Изменение области отображения карты, так чтобы были видны все маркеры\n             * @param {Object} bounds - границы карты\n             */\n\n        }, {\n            key: 'fitBounds',\n            value: function fitBounds(bounds) {\n                this.map.fitBounds(bounds);\n            }\n\n            /**\n             * Инициализация кастомного зума\n             * @param {Object} $map - jQuery Object - разметка карты\n             */\n\n        }, {\n            key: 'initCustomZoomControls',\n            value: function initCustomZoomControls($map) {\n                this.$zoomWrapper = $map.next('.b-map__zoom-wrapper');\n                this.$zoomIn = this.$zoomWrapper.find('.b-map__zoom-in');\n                this.$zoomOut = this.$zoomWrapper.find('.b-map__zoom-out');\n\n                if (this.$zoomIn.length && this.$zoomOut.length) {\n                    this.options.zoomControl = false;\n                }\n            }\n\n            /**\n             * Клики по кастомным контролам зума\n             */\n\n        }, {\n            key: 'clickCustomZoomControls',\n            value: function clickCustomZoomControls() {\n                var that = this;\n                var hide = 'is-hide';\n\n                this.map.addListener('zoom_changed', function () {\n                    var currentZoom = that.map.getZoom();\n\n                    if (currentZoom === that.options.maxZoom) {\n                        that.$zoomIn.addClass(hide);\n                    } else {\n                        that.$zoomIn.removeClass(hide);\n                    }\n\n                    if (currentZoom === that.options.minZoom) {\n                        that.$zoomOut.addClass(hide);\n                    } else {\n                        that.$zoomOut.removeClass(hide);\n                    }\n                });\n\n                this.$zoomIn.click(function () {\n                    that.map.setZoom(that.map.getZoom() + 1);\n                    if (that.map.getZoom() === that.options.maxZoom) {\n                        that.$zoomIn.addClass(hide);\n                    } else {\n                        that.$zoomOut.removeClass(hide);\n                    }\n                });\n\n                this.$zoomOut.click(function () {\n                    that.map.setZoom(that.map.getZoom() - 1);\n\n                    if (that.map.getZoom() === that.options.minZoom) {\n                        that.$zoomOut.addClass(hide);\n                    } else {\n                        that.$zoomIn.removeClass(hide);\n                    }\n                });\n            }\n\n            /**\n             * Кластеризаци\n             * @return {Object} MarkerClusterer объект к кластерами\n             */\n\n        }, {\n            key: 'initCluster',\n            value: function initCluster() {\n                this.clusterOptions = {\n                    styles: [{\n                        url: 'http://google-maps-utility-library-v3.' + 'googlecode.com/svn/trunk/markerclusterer/images/m1.png',\n                        height: 52,\n                        width: 52\n                    }]\n                };\n\n                this.clusterOptions = $.extend(this.clusterOptions, this.data.clusterOptions);\n\n                return new MarkerClusterer(this.map, this.markers, this.clusterOptions);\n            }\n\n            /**\n             * Табы для сортировки маркеров на карте.\n             * Сортирует по свойству type у маркера.\n             */\n\n        }, {\n            key: 'initTabs',\n            value: function initTabs() {\n                var $tabsWrapper = this.$map.parents('.b-map__cnt').find('.b-map-tabs');\n                if (!$tabsWrapper.length) {\n                    return;\n                }\n\n                var that = this;\n                var $tabItems = $tabsWrapper.find('.b-map-tabs__item');\n                var active = 'is-active';\n                var $tabBtnToggleContent = $tabsWrapper.find('.b-map-tabs__btn');\n                var $tabContent = $tabsWrapper.find('.b-map-tabs__list');\n\n                $tabItems.click(function (e) {\n                    e.preventDefault();\n                    $tabItems.removeClass(active);\n                    $(this).addClass(active);\n                    that.closeInfoWindow();\n                    that.markerToggle($(this).find('a').data('type'));\n                    $tabContent.removeClass(active);\n                });\n\n                $tabBtnToggleContent.click(function (e) {\n                    e.preventDefault();\n                    $tabContent.toggleClass(active);\n                });\n\n                if (this.isMobile) {\n                    google.maps.event.addListener(this.map, 'click', function () {\n                        $tabContent.removeClass(active);\n                    });\n                }\n            }\n\n            /**\n             * Режим создания/редактирования карты\n             */\n\n        }, {\n            key: 'editor',\n            value: function editor() {\n                if (!this.data.editor) {\n                    return;\n                }\n\n                google.maps.event.addListener(this.map, 'click', function (e) {\n                    console.log('[' + // eslint-disable-line no-console\n                    e.latLng.lat().toFixed(6) + ',' + // eslint-disable-line no-console\n                    e.latLng.lng().toFixed(6) + ']'); // eslint-disable-line no-console\n                });\n            }\n        }]);\n\n        return Map;\n    }();\n\n    return Map;\n});"]}