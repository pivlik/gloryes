{"version":3,"sources":["app/form.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","define","$","webshim","errorTpl","successTpl","setOptions","lazyCustomMessages","replaceValidationUI","addValidators","wspopover","appendTo","polyfill","Form","$form","opts","this","onSuccess","onError","successText","successHeader","errorText","extend","$el","$cont","$submit","find","value","form","$hidden","val","window","__s","each","mask","autoclear","append","submit","e","preventDefault","send","blur","prop","ajax","url","attr","location","data","serialize","type","dataType","always","done","method","ret","fail","handleError","swapContent","header","message","defaultHeader","defaultReply","headerSuccess","messageSuccess","redirect","href","tplData","html"],"mappings":"AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,KAIhiBkB,QAAO,YAAa,SAAU,aAAc,qBAAsB,uBAAwB,gBAAiB,gBAAiB,aAAc,SAAUC,EAAGC,EAASC,EAAUC,GAoKtK,MAjKAF,GAAQG,WAAW,aAAa,GAChCH,EAAQG,WAAW,SACfC,oBAAoB,EACpBC,qBAAqB,EACrBC,eAAe,IAGnBN,EAAQG,YACJI,WACIC,SAAU,aAIlBR,EAAQS,SAAS,mBAQN,WACP,QAASC,GAAKC,EAAOC,GACjBlC,gBAAgBmC,KAAMH,GAEtBG,KAAKC,UAAY,KACjBD,KAAKE,QAAU,KAEfF,KAAKD,MACDV,WAAYA,EACZc,YAAa,2BACbC,cAAe,oBACfC,UAAW,2DAGfnB,EAAEoB,OAAON,KAAKD,KAAMA,OAEpBC,KAAKO,IAAMT,YAAiBZ,GAAIY,EAAQZ,EAAEY,GAE1CE,KAAKQ,MAAQR,KAAKO,IAClBP,KAAKS,QAAUT,KAAKO,IAAIG,KAAK,iBAsHjC,MA9GAzC,cAAa4B,IACThB,IAAK,OACL8B,MAAO,WACH,GAAIC,GAAOZ,KAEPa,EAAU3B,EAAE,mCAChB2B,GAAQC,IAAIC,OAAOC,KAAO,IAE1BJ,EAAKL,IAAIG,KAAK,gBAAgBO,KAAK,WAC/B/B,EAAEc,MAAMkB,KAAK,qBAAuBC,WAAW,MAGnDP,EAAKL,IAAIa,OAAOP,GAASQ,OAAO,SAAUC,GACtCA,EAAEC,iBACFX,EAAKY,YAIb3C,IAAK,OAML8B,MAAO,WACH,GAAIC,GAAOZ,IAEXd,GAAE,UAAUuC,OACZb,EAAKH,QAAQiB,KAAK,YAAY,GAE9BxC,EAAEyC,MACEC,IAAKhB,EAAKL,IAAIsB,KAAK,WAAaC,SAChCC,KAAMnB,EAAKL,IAAIyB,YACfC,KAAMrB,EAAKL,IAAIsB,KAAK,WAAa,OACjCK,SAAU,SACXC,OAAO,WACNvB,EAAKH,QAAQiB,KAAK,YAAY,KAC/BU,KAAK,SAAcL,GAClB,GAAIM,GAASN,EAAKO,IAAM,gBAAkB,aAC1C1B,GAAKyB,GAAQN,KACdQ,KAAK,SAAcR,GAClBnB,EAAK4B,YAAYT,QAIzBlD,IAAK,cAOL8B,MAAO,SAAqBoB,GACxB,GAAInB,GAAOZ,IAOX,IAA4B,kBAAjBY,GAAKV,QAAwB,CAEpC,GADUU,EAAKV,QAAQ6B,GAEnB,OAIRnB,EAAKJ,MAAMiC,YAAYrD,GACnBsD,OAAQ,SACRC,QAASZ,EAAKY,SAAW/B,EAAKb,KAAKM,gBAI3CxB,IAAK,gBAOL8B,MAAO,SAAuBoB,GAC1B,GAAInB,GAAOZ,KACP4C,EAAgBhC,EAAKb,KAAKK,cAC1ByC,EAAejC,EAAKb,KAAKI,YACzB2C,EAAgBlC,EAAKL,IAAIwB,KAAK,UAC9BgB,EAAiBnC,EAAKL,IAAIwB,KAAK,UAEnC,IAAIA,EAAKiB,SAEL,YADAlB,SAASmB,KAAOlB,EAAKiB,SAIzB,IAA8B,kBAAnBpC,GAAKX,UAA0B,CAEtC,GADUW,EAAKX,UAAU8B,GAErB,OAIR,GAAImB,GAAUhE,EAAEoB,QACZoC,OAAQI,GAAiBF,EACzBD,QAASI,GAAkBF,GAC5Bd,GAECoB,EAAOvC,EAAKb,KAAKV,WAAW6D,EAEhCtC,GAAKJ,MAAMiC,YAAYU,OAIxBtD","file":"../../app/form.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\ndefine('app/form', ['jquery', 'polyfiller', 'app/tpl/form/error', 'app/tpl/form/success', 'app/functions', 'masked-inputs', 'app/utils'], function ($, webshim, errorTpl, successTpl) {\n    'use strict';\n\n    webshim.setOptions('waitReady', false);\n    webshim.setOptions('forms', {\n        lazyCustomMessages: true,\n        replaceValidationUI: true,\n        addValidators: true\n    });\n\n    webshim.setOptions({\n        wspopover: {\n            appendTo: 'element'\n        }\n    });\n\n    webshim.polyfill('forms forms-ext');\n\n    /**\n      * @constructor\n     * @param {Object|String} $form объект jQuery или строка-селектор\n     * @param {Object|Void}   opts  объект параметров\n     */\n\n    var Form = function () {\n        function Form($form, opts) {\n            _classCallCheck(this, Form);\n\n            this.onSuccess = null;\n            this.onError = null;\n\n            this.opts = {\n                successTpl: successTpl,\n                successText: 'Форма успешно отправлена',\n                successHeader: 'Заявка отправлена',\n                errorText: 'Внутренняя ошибка, пожалуйста, ' + 'повторите запрос позднее'\n            };\n\n            $.extend(this.opts, opts || {});\n\n            this.$el = $form instanceof $ ? $form : $($form);\n\n            this.$cont = this.$el;\n            this.$submit = this.$el.find('[type=submit]');\n        }\n\n        /**\n         * Отменяет обычный submit формы, на событии valid осуществляет свой submit\n         */\n\n\n        _createClass(Form, [{\n            key: 'init',\n            value: function init() {\n                var form = this;\n\n                var $hidden = $('<input type=\"hidden\" name=\"__s\">');\n                $hidden.val(window.__s || '');\n\n                form.$el.find('[type=\"tel\"]').each(function () {\n                    $(this).mask('+7 (999) 999-9999', { autoclear: false });\n                });\n\n                form.$el.append($hidden).submit(function (e) {\n                    e.preventDefault();\n                    form.send();\n                });\n            }\n        }, {\n            key: 'send',\n\n\n            /**\n             * Отправка формы и обработчик ответа от сервера\n             */\n            value: function send() {\n                var form = this;\n\n                $(':focus').blur();\n                form.$submit.prop('disabled', true);\n\n                $.ajax({\n                    url: form.$el.attr('action') || location,\n                    data: form.$el.serialize(),\n                    type: form.$el.attr('method') || 'post',\n                    dataType: 'json'\n                }).always(function always() {\n                    form.$submit.prop('disabled', false);\n                }).done(function done(data) {\n                    var method = data.ret ? 'handleSuccess' : 'handleError';\n                    form[method](data);\n                }).fail(function fail(data) {\n                    form.handleError(data);\n                });\n            }\n        }, {\n            key: 'handleError',\n\n\n            /**\n             * Обработчик ошибки ответа\n             * @param  {Object|undefined} data ответ сервера, если был, или undefined\n             */\n            value: function handleError(data) {\n                var form = this;\n\n                /**\n                 * Если в параметры конструктора был передан callback - вызываем.\n                 * Если при этом callback вернет true, то стандартный обработчик\n                 * будет отменен\n                 */\n                if (typeof form.onError === 'function') {\n                    var ret = form.onError(data);\n                    if (ret) {\n                        return;\n                    }\n                }\n\n                form.$cont.swapContent(errorTpl({\n                    header: 'Ошибка',\n                    message: data.message || form.opts.errorText\n                }));\n            }\n        }, {\n            key: 'handleSuccess',\n\n\n            /**\n             * Обработчик положительного ответа сервера\n             * @param  {Object} data ответ сервера\n             */\n            value: function handleSuccess(data) {\n                var form = this;\n                var defaultHeader = form.opts.successHeader;\n                var defaultReply = form.opts.successText;\n                var headerSuccess = form.$el.data('header');\n                var messageSuccess = form.$el.data('message');\n\n                if (data.redirect) {\n                    location.href = data.redirect;\n                    return;\n                }\n\n                if (typeof form.onSuccess === 'function') {\n                    var ret = form.onSuccess(data);\n                    if (ret) {\n                        return;\n                    }\n                }\n\n                var tplData = $.extend({\n                    header: headerSuccess || defaultHeader,\n                    message: messageSuccess || defaultReply\n                }, data);\n\n                var html = form.opts.successTpl(tplData);\n\n                form.$cont.swapContent(html);\n            }\n        }]);\n\n        return Form;\n    }();\n\n    return Form;\n});"]}